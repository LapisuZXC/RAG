#!/bin/bash
set -e

APP_NAME="my-parser-app"
NAMESPACE="default"
DOCKERFILE_PATH="."
TAG="latest"
K8S_DIR="./k8s"
JOB_NAME="one-time-parser"

echo "==> –°—Ç—Ä–æ–∏–º Docker –æ–±—Ä–∞–∑..."
eval $(minikube docker-env)
docker build -t $APP_NAME:$TAG $DOCKERFILE_PATH

echo "==> –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ä–µ—Å—É—Ä—Å—ã..."
kubectl delete -f $K8S_DIR/deployment.yaml --ignore-not-found
kubectl delete -f $K8S_DIR/job.yaml --ignore-not-found
kubectl delete -f $K8S_DIR/cronjob.yaml --ignore-not-found
kubectl delete -f $K8S_DIR/persistent-volume.yaml --ignore-not-found
kubectl delete -f $K8S_DIR/persistent-volume.yaml.template --ignore-not-found

echo "==> –°–æ–∑–¥–∞—ë–º –ª–æ–∫–∞–ª—å–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø–æ–¥ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç..."
DATA_DIR="$(pwd)/data"
mkdir -p "$DATA_DIR"

echo "==> –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º persistent-volume.yaml –Ω–∞ –æ—Å–Ω–æ–≤–µ —à–∞–±–ª–æ–Ω–∞..."
PV_TEMPLATE="$K8S_DIR/persistent-volume.yaml.template"
PV_RENDERED="$K8S_DIR/persistent-volume.yaml"

sed "s|__HOST_PATH__|$DATA_DIR|g" "$PV_TEMPLATE" >"$PV_RENDERED"

echo "==> –ü—Ä–∏–º–µ–Ω—è–µ–º Persistent Volume –∏ Claim..."
kubectl apply -f "$PV_RENDERED"

echo "==> –°–æ–∑–¥–∞—ë–º Deployment..."
kubectl apply -f $K8S_DIR/deployment.yaml

echo "==> –°–æ–∑–¥–∞—ë–º Job..."
kubectl apply -f $K8S_DIR/job.yaml

echo "==> –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–∞ Job..."
while true; do
  pod_name=$(kubectl get pods --selector=job-name=$JOB_NAME -o jsonpath='{.items[*].metadata.name}' 2>/dev/null)
  if [ -n "$pod_name" ]; then
    echo "==> –ù–∞–π–¥–µ–Ω –ø–æ–¥: $pod_name"
    break
  fi
  sleep 2
done

echo "==> –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ª–æ–≥–∞–º –ø–æ–¥–∞ (stream)..."
kubectl logs -f "$pod_name" &
LOGS_PID=$!

echo "==> –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è Job..."
while true; do
  status_succeeded=$(kubectl get job $JOB_NAME -o jsonpath='{.status.succeeded}' 2>/dev/null || echo "")
  status_failed=$(kubectl get job $JOB_NAME -o jsonpath='{.status.failed}' 2>/dev/null || echo "")

  if [ "$status_succeeded" == "1" ]; then
    echo "‚úÖ Job –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ!"
    kill $LOGS_PID 2>/dev/null || true
    wait $LOGS_PID 2>/dev/null || true
    break
  elif [ "$status_failed" != "" ] && [ "$status_failed" != "0" ]; then
    echo "‚ùå Job –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π!"
    kill $LOGS_PID 2>/dev/null || true
    wait $LOGS_PID 2>/dev/null || true
    echo "üîª –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—ã–≤–æ–¥ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ª–æ–≥–æ–≤:"
    kubectl logs "$pod_name"
    exit 1
  else
    sleep 10
  fi
done

echo "==> –°–æ–∑–¥–∞—ë–º CronJob..."
kubectl apply -f $K8S_DIR/cronjob.yaml

echo "==> –í—Å—ë –≥–æ—Ç–æ–≤–æ:"
kubectl get all
